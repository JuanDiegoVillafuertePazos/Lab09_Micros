

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Apr 27 11:45:20 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	intentry,global,class=CODE,delta=2
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11  0000                     
    12                           ; Version 2.20
    13                           ; Generated 12/02/2020 GMT
    14                           ; 
    15                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F887 Definitions
    44                           ; 
    45                           ; SFR Addresses
    46  0000                     	;# 
    47  0001                     	;# 
    48  0002                     	;# 
    49  0003                     	;# 
    50  0004                     	;# 
    51  0005                     	;# 
    52  0006                     	;# 
    53  0007                     	;# 
    54  0008                     	;# 
    55  0009                     	;# 
    56  000A                     	;# 
    57  000B                     	;# 
    58  000C                     	;# 
    59  000D                     	;# 
    60  000E                     	;# 
    61  000E                     	;# 
    62  000F                     	;# 
    63  0010                     	;# 
    64  0011                     	;# 
    65  0012                     	;# 
    66  0013                     	;# 
    67  0014                     	;# 
    68  0015                     	;# 
    69  0015                     	;# 
    70  0016                     	;# 
    71  0017                     	;# 
    72  0018                     	;# 
    73  0019                     	;# 
    74  001A                     	;# 
    75  001B                     	;# 
    76  001B                     	;# 
    77  001C                     	;# 
    78  001D                     	;# 
    79  001E                     	;# 
    80  001F                     	;# 
    81  0081                     	;# 
    82  0085                     	;# 
    83  0086                     	;# 
    84  0087                     	;# 
    85  0088                     	;# 
    86  0089                     	;# 
    87  008C                     	;# 
    88  008D                     	;# 
    89  008E                     	;# 
    90  008F                     	;# 
    91  0090                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0093                     	;# 
    96  0093                     	;# 
    97  0094                     	;# 
    98  0095                     	;# 
    99  0096                     	;# 
   100  0097                     	;# 
   101  0098                     	;# 
   102  0099                     	;# 
   103  009A                     	;# 
   104  009B                     	;# 
   105  009C                     	;# 
   106  009D                     	;# 
   107  009E                     	;# 
   108  009F                     	;# 
   109  0105                     	;# 
   110  0107                     	;# 
   111  0108                     	;# 
   112  0109                     	;# 
   113  010C                     	;# 
   114  010C                     	;# 
   115  010D                     	;# 
   116  010E                     	;# 
   117  010F                     	;# 
   118  0185                     	;# 
   119  0187                     	;# 
   120  0188                     	;# 
   121  0189                     	;# 
   122  018C                     	;# 
   123  018D                     	;# 
   124  0000                     	;# 
   125  0001                     	;# 
   126  0002                     	;# 
   127  0003                     	;# 
   128  0004                     	;# 
   129  0005                     	;# 
   130  0006                     	;# 
   131  0007                     	;# 
   132  0008                     	;# 
   133  0009                     	;# 
   134  000A                     	;# 
   135  000B                     	;# 
   136  000C                     	;# 
   137  000D                     	;# 
   138  000E                     	;# 
   139  000E                     	;# 
   140  000F                     	;# 
   141  0010                     	;# 
   142  0011                     	;# 
   143  0012                     	;# 
   144  0013                     	;# 
   145  0014                     	;# 
   146  0015                     	;# 
   147  0015                     	;# 
   148  0016                     	;# 
   149  0017                     	;# 
   150  0018                     	;# 
   151  0019                     	;# 
   152  001A                     	;# 
   153  001B                     	;# 
   154  001B                     	;# 
   155  001C                     	;# 
   156  001D                     	;# 
   157  001E                     	;# 
   158  001F                     	;# 
   159  0081                     	;# 
   160  0085                     	;# 
   161  0086                     	;# 
   162  0087                     	;# 
   163  0088                     	;# 
   164  0089                     	;# 
   165  008C                     	;# 
   166  008D                     	;# 
   167  008E                     	;# 
   168  008F                     	;# 
   169  0090                     	;# 
   170  0091                     	;# 
   171  0092                     	;# 
   172  0093                     	;# 
   173  0093                     	;# 
   174  0093                     	;# 
   175  0094                     	;# 
   176  0095                     	;# 
   177  0096                     	;# 
   178  0097                     	;# 
   179  0098                     	;# 
   180  0099                     	;# 
   181  009A                     	;# 
   182  009B                     	;# 
   183  009C                     	;# 
   184  009D                     	;# 
   185  009E                     	;# 
   186  009F                     	;# 
   187  0105                     	;# 
   188  0107                     	;# 
   189  0108                     	;# 
   190  0109                     	;# 
   191  010C                     	;# 
   192  010C                     	;# 
   193  010D                     	;# 
   194  010E                     	;# 
   195  010F                     	;# 
   196  0185                     	;# 
   197  0187                     	;# 
   198  0188                     	;# 
   199  0189                     	;# 
   200  018C                     	;# 
   201  018D                     	;# 
   202  000B                     _INTCONbits	set	11
   203  0012                     _T2CONbits	set	18
   204  001F                     _ADCON0	set	31
   205  0008                     _PORTD	set	8
   206  0007                     _PORTC	set	7
   207  0006                     _PORTB	set	6
   208  0005                     _PORTA	set	5
   209  001D                     _CCP2CONbits	set	29
   210  001B                     _CCPR2L	set	27
   211  0017                     _CCP1CONbits	set	23
   212  001E                     _ADRESH	set	30
   213  0015                     _CCPR1L	set	21
   214  001F                     _ADCON0bits	set	31
   215  000C                     _PIR1bits	set	12
   216  008C                     _PIE1bits	set	140
   217  0092                     _PR2	set	146
   218  0087                     _TRISCbits	set	135
   219  009F                     _ADCON1	set	159
   220  0088                     _TRISD	set	136
   221  0087                     _TRISC	set	135
   222  0085                     _TRISA	set	133
   223  0086                     _TRISB	set	134
   224  008F                     _OSCCONbits	set	143
   225  009E                     _ADRESL	set	158
   226  0188                     _ANSEL	set	392
   227  0189                     _ANSELH	set	393
   228                           
   229                           	psect	cinit
   230  000F                     start_initialization:	
   231                           ; #config settings
   232                           
   233  000F                     __initialization:
   234  000F                     end_of_initialization:	
   235                           ;End of C runtime variable initialization code
   236                           
   237  000F                     __end_of__initialization:
   238  000F  0183               	clrf	3
   239  0010  120A  118A  288B   	ljmp	_main	;jump to C main() function
   240                           
   241                           	psect	cstackCOMMON
   242  0070                     __pcstackCOMMON:
   243  0070                     ?_isr:
   244  0070                     ??_isr:	
   245                           ; 1 bytes @ 0x0
   246                           
   247  0070                     ?_main:	
   248                           ; 1 bytes @ 0x0
   249                           
   250                           
   251                           ; 1 bytes @ 0x0
   252  0070                     	ds	4
   253  0074                     ??_main:
   254                           
   255                           ; 1 bytes @ 0x4
   256  0074                     	ds	1
   257                           
   258                           	psect	maintext
   259  008B                     __pmaintext:	
   260 ;;
   261 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   262 ;;
   263 ;; *************** function _main *****************
   264 ;; Defined at:
   265 ;;		line 55 in file "Servos.c"
   266 ;; Parameters:    Size  Location     Type
   267 ;;		None
   268 ;; Auto vars:     Size  Location     Type
   269 ;;		None
   270 ;; Return value:  Size  Location     Type
   271 ;;                  1    wreg      void 
   272 ;; Registers used:
   273 ;;		wreg, status,2, status,0
   274 ;; Tracked objects:
   275 ;;		On entry : B00/0
   276 ;;		On exit  : 0/0
   277 ;;		Unchanged: 0/0
   278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   279 ;;      Params:         0       0       0       0       0
   280 ;;      Locals:         0       0       0       0       0
   281 ;;      Temps:          1       0       0       0       0
   282 ;;      Totals:         1       0       0       0       0
   283 ;;Total ram usage:        1 bytes
   284 ;; Hardware stack levels required when called:    1
   285 ;; This function calls:
   286 ;;		Nothing
   287 ;; This function is called by:
   288 ;;		Startup code after reset
   289 ;; This function uses a non-reentrant model
   290 ;;
   291                           
   292                           
   293                           ;psect for function _main
   294  008B                     _main:
   295  008B                     l682:	
   296                           ;incstack = 0
   297                           ; Regs used in _main: [wreg+status,2+status,0]
   298                           
   299                           
   300                           ;Servos.c: 59:     CCPR1L = 0x0f;
   301  008B  3070               	movlw	112
   302  008C  1683               	bsf	3,5	;RP0=1, select bank1
   303  008D  1303               	bcf	3,6	;RP1=0, select bank1
   304  008E  048F               	iorwf	15,f	;volatile
   305  008F                     l684:
   306                           
   307                           ;Servos.c: 60:     CCP1CONbits.DC1B = 0;
   308  008F  140F               	bsf	15,0	;volatile
   309  0090                     l686:
   310                           
   311                           ;Servos.c: 63:     CCP2CONbits.CCP2M = 0b1100;
   312  0090  3014               	movlw	20
   313  0091  1683               	bsf	3,5	;RP0=1, select bank3
   314  0092  1703               	bsf	3,6	;RP1=1, select bank3
   315  0093  0089               	movwf	9	;volatile
   316  0094                     l688:
   317                           
   318                           ;Servos.c: 64:     CCPR2L = 0x0f;
   319  0094  0188               	clrf	8	;volatile
   320  0095                     l690:
   321                           
   322                           ;Servos.c: 66: 
   323  0095  3003               	movlw	3
   324  0096  1683               	bsf	3,5	;RP0=1, select bank1
   325  0097  1303               	bcf	3,6	;RP1=0, select bank1
   326  0098  0086               	movwf	6	;volatile
   327  0099                     l692:
   328                           
   329                           ;Servos.c: 67: 
   330  0099  0185               	clrf	5	;volatile
   331  009A                     l694:
   332                           
   333                           ;Servos.c: 68:     PIR1bits.TMR2IF = 0;
   334  009A  0187               	clrf	7	;volatile
   335  009B                     l696:
   336                           
   337                           ;Servos.c: 69:     T2CONbits.T2CKPS = 0b11;
   338  009B  0188               	clrf	8	;volatile
   339  009C                     l698:
   340                           
   341                           ;Servos.c: 71: 
   342  009C  1283               	bcf	3,5	;RP0=0, select bank0
   343  009D  1303               	bcf	3,6	;RP1=0, select bank0
   344  009E  0185               	clrf	5	;volatile
   345  009F                     l700:
   346                           
   347                           ;Servos.c: 72:     while(PIR1bits.TMR2IF == 0);
   348  009F  0186               	clrf	6	;volatile
   349  00A0                     l702:
   350                           
   351                           ;Servos.c: 73:     PIR1bits.TMR2IF = 0;
   352  00A0  0187               	clrf	7	;volatile
   353  00A1                     l704:
   354                           
   355                           ;Servos.c: 74:     TRISCbits.TRISC2 = 0;
   356  00A1  0188               	clrf	8	;volatile
   357  00A2                     l706:
   358                           
   359                           ;Servos.c: 77: 
   360  00A2  3033               	movlw	51
   361  00A3  009F               	movwf	31	;volatile
   362  00A4                     l708:
   363                           
   364                           ;Servos.c: 78:     INTCONbits.GIE = 1;
   365  00A4  1683               	bsf	3,5	;RP0=1, select bank1
   366  00A5  1303               	bcf	3,6	;RP1=0, select bank1
   367  00A6  019F               	clrf	31	;volatile
   368  00A7                     l710:
   369                           
   370                           ;Servos.c: 80: 
   371  00A7  3021               	movlw	33
   372  00A8  00F4               	movwf	??_main
   373  00A9                     u77:
   374  00A9  0BF4               	decfsz	??_main,f
   375  00AA  28A9               	goto	u77
   376  00AB                     l712:
   377                           
   378                           ;Servos.c: 84:     while (1){}
   379  00AB  1683               	bsf	3,5	;RP0=1, select bank1
   380  00AC  1303               	bcf	3,6	;RP1=0, select bank1
   381  00AD  1507               	bsf	7,2	;volatile
   382  00AE                     l714:
   383                           
   384                           ;Servos.c: 85: }
   385  00AE  30FA               	movlw	250
   386  00AF  0092               	movwf	18	;volatile
   387  00B0                     l716:
   388  00B0  303F               	movlw	-193
   389  00B1  1283               	bcf	3,5	;RP0=0, select bank0
   390  00B2  1303               	bcf	3,6	;RP1=0, select bank0
   391  00B3  0597               	andwf	23,f	;volatile
   392  00B4                     l718:
   393  00B4  0817               	movf	23,w	;volatile
   394  00B5  39F0               	andlw	-16
   395  00B6  380C               	iorlw	12
   396  00B7  0097               	movwf	23	;volatile
   397  00B8                     l720:
   398  00B8  300F               	movlw	15
   399  00B9  0095               	movwf	21	;volatile
   400  00BA                     l722:
   401  00BA  30CF               	movlw	-49
   402  00BB  0597               	andwf	23,f	;volatile
   403  00BC                     l724:
   404  00BC  1683               	bsf	3,5	;RP0=1, select bank1
   405  00BD  1303               	bcf	3,6	;RP1=0, select bank1
   406  00BE  1487               	bsf	7,1	;volatile
   407  00BF                     l726:
   408  00BF  1283               	bcf	3,5	;RP0=0, select bank0
   409  00C0  1303               	bcf	3,6	;RP1=0, select bank0
   410  00C1  081D               	movf	29,w	;volatile
   411  00C2  39F0               	andlw	-16
   412  00C3  380C               	iorlw	12
   413  00C4  009D               	movwf	29	;volatile
   414  00C5                     l728:
   415  00C5  300F               	movlw	15
   416  00C6  009B               	movwf	27	;volatile
   417  00C7                     l730:
   418  00C7  129D               	bcf	29,5	;volatile
   419  00C8                     l732:
   420  00C8  108C               	bcf	12,1	;volatile
   421  00C9                     l734:
   422  00C9  3003               	movlw	3
   423  00CA  0492               	iorwf	18,f	;volatile
   424  00CB                     l736:
   425  00CB  1512               	bsf	18,2	;volatile
   426  00CC                     l68:
   427  00CC  1C8C               	btfss	12,1	;volatile
   428  00CD  28CF               	goto	u61
   429  00CE  28D0               	goto	u60
   430  00CF                     u61:
   431  00CF  28CC               	goto	l68
   432  00D0                     u60:
   433  00D0                     l70:
   434  00D0  108C               	bcf	12,1	;volatile
   435  00D1  1683               	bsf	3,5	;RP0=1, select bank1
   436  00D2  1303               	bcf	3,6	;RP1=0, select bank1
   437  00D3  1107               	bcf	7,2	;volatile
   438  00D4  1087               	bcf	7,1	;volatile
   439  00D5  178B               	bsf	11,7	;volatile
   440  00D6  158B               	bsf	11,3	;volatile
   441  00D7  170B               	bsf	11,6	;volatile
   442  00D8  170C               	bsf	12,6	;volatile
   443  00D9                     l71:
   444  00D9                     l72:
   445  00D9  28D9               	goto	l71
   446  00DA  120A  118A  280C   	ljmp	start
   447  00DD                     __end_of_main:
   448                           
   449                           	psect	text1
   450  0013                     __ptext1:	
   451 ;; *************** function _isr *****************
   452 ;; Defined at:
   453 ;;		line 29 in file "Servos.c"
   454 ;; Parameters:    Size  Location     Type
   455 ;;		None
   456 ;; Auto vars:     Size  Location     Type
   457 ;;		None
   458 ;; Return value:  Size  Location     Type
   459 ;;                  1    wreg      void 
   460 ;; Registers used:
   461 ;;		wreg, status,2, status,0
   462 ;; Tracked objects:
   463 ;;		On entry : 0/0
   464 ;;		On exit  : 0/0
   465 ;;		Unchanged: 0/0
   466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   467 ;;      Params:         0       0       0       0       0
   468 ;;      Locals:         0       0       0       0       0
   469 ;;      Temps:          4       0       0       0       0
   470 ;;      Totals:         4       0       0       0       0
   471 ;;Total ram usage:        4 bytes
   472 ;; Hardware stack levels used:    1
   473 ;; This function calls:
   474 ;;		Nothing
   475 ;; This function is called by:
   476 ;;		Interrupt level 1
   477 ;; This function uses a non-reentrant model
   478 ;;
   479                           
   480                           
   481                           ;psect for function _isr
   482  0013                     _isr:
   483  0013                     i1l666:
   484                           
   485                           ;Servos.c: 31:     OSCCONbits.SCS = 1;
   486  0013  1283               	bcf	3,5	;RP0=0, select bank0
   487  0014  1303               	bcf	3,6	;RP1=0, select bank0
   488  0015  1F0C               	btfss	12,6	;volatile
   489  0016  2818               	goto	u1_21
   490  0017  2819               	goto	u1_20
   491  0018                     u1_21:
   492  0018  2884               	goto	i1l63
   493  0019                     u1_20:
   494  0019                     i1l668:
   495                           
   496                           ;Servos.c: 33: 
   497  0019  0C1F               	rrf	31,w	;volatile
   498  001A  00F0               	movwf	??_isr
   499  001B  0C70               	rrf	??_isr,w
   500  001C  390F               	andlw	15
   501  001D  3A0C               	xorlw	12
   502  001E  1D03               	skipz
   503  001F  2821               	goto	u2_21
   504  0020  2822               	goto	u2_20
   505  0021                     u2_21:
   506  0021  284B               	goto	i1l672
   507  0022                     u2_20:
   508  0022                     i1l670:
   509                           
   510                           ;Servos.c: 35:     ANSEL = 0;
   511  0022  081E               	movf	30,w	;volatile
   512  0023  00F0               	movwf	??_isr
   513  0024  1003               	clrc
   514  0025  0C70               	rrf	??_isr,w
   515  0026  3E7C               	addlw	124
   516  0027  0095               	movwf	21	;volatile
   517                           
   518                           ;Servos.c: 36: 
   519  0028  081E               	movf	30,w	;volatile
   520  0029  3901               	andlw	1
   521  002A  00F0               	movwf	??_isr
   522  002B  0EF0               	swapf	??_isr,f
   523  002C  0DF0               	rlf	??_isr,f
   524  002D  0817               	movf	23,w	;volatile
   525  002E  0670               	xorwf	??_isr,w
   526  002F  39DF               	andlw	-33
   527  0030  0670               	xorwf	??_isr,w
   528  0031  0097               	movwf	23	;volatile
   529                           
   530                           ;Servos.c: 37:     TRISB = 3;
   531  0032  1683               	bsf	3,5	;RP0=1, select bank1
   532  0033  1303               	bcf	3,6	;RP1=0, select bank1
   533  0034  081E               	movf	30,w	;volatile
   534  0035  00F0               	movwf	??_isr
   535  0036  3007               	movlw	7
   536  0037                     u3_25:
   537  0037  1003               	clrc
   538  0038  0CF0               	rrf	??_isr,f
   539  0039  3EFF               	addlw	-1
   540  003A  1D03               	skipz
   541  003B  2837               	goto	u3_25
   542  003C  0870               	movf	??_isr,w
   543  003D  00F1               	movwf	??_isr+1
   544  003E  0EF1               	swapf	??_isr+1,f
   545  003F  1283               	bcf	3,5	;RP0=0, select bank0
   546  0040  1303               	bcf	3,6	;RP1=0, select bank0
   547  0041  0817               	movf	23,w	;volatile
   548  0042  0671               	xorwf	??_isr+1,w
   549  0043  39EF               	andlw	-17
   550  0044  0671               	xorwf	??_isr+1,w
   551  0045  0097               	movwf	23	;volatile
   552                           
   553                           ;Servos.c: 38:     TRISA = 0;
   554  0046  081F               	movf	31,w	;volatile
   555  0047  39C3               	andlw	-61
   556  0048  3828               	iorlw	40
   557  0049  009F               	movwf	31	;volatile
   558                           
   559                           ;Servos.c: 40:     TRISD = 0;
   560  004A  287C               	goto	i1l676
   561  004B                     i1l672:
   562  004B  0C1F               	rrf	31,w	;volatile
   563  004C  00F0               	movwf	??_isr
   564  004D  0C70               	rrf	??_isr,w
   565  004E  390F               	andlw	15
   566  004F  3A0A               	xorlw	10
   567  0050  1D03               	skipz
   568  0051  2853               	goto	u4_21
   569  0052  2854               	goto	u4_20
   570  0053                     u4_21:
   571  0053  287C               	goto	i1l676
   572  0054                     u4_20:
   573  0054                     i1l674:
   574                           
   575                           ;Servos.c: 43:     PORTB = 0;
   576  0054  081E               	movf	30,w	;volatile
   577  0055  00F0               	movwf	??_isr
   578  0056  1003               	clrc
   579  0057  0C70               	rrf	??_isr,w
   580  0058  3E7C               	addlw	124
   581  0059  009B               	movwf	27	;volatile
   582                           
   583                           ;Servos.c: 44:     PORTC = 0;
   584  005A  081E               	movf	30,w	;volatile
   585  005B  3901               	andlw	1
   586  005C  00F0               	movwf	??_isr
   587  005D  0EF0               	swapf	??_isr,f
   588  005E  0DF0               	rlf	??_isr,f
   589  005F  081D               	movf	29,w	;volatile
   590  0060  0670               	xorwf	??_isr,w
   591  0061  39DF               	andlw	-33
   592  0062  0670               	xorwf	??_isr,w
   593  0063  009D               	movwf	29	;volatile
   594                           
   595                           ;Servos.c: 45:     PORTD = 0;
   596  0064  1683               	bsf	3,5	;RP0=1, select bank1
   597  0065  1303               	bcf	3,6	;RP1=0, select bank1
   598  0066  081E               	movf	30,w	;volatile
   599  0067  00F0               	movwf	??_isr
   600  0068  3007               	movlw	7
   601  0069                     u5_25:
   602  0069  1003               	clrc
   603  006A  0CF0               	rrf	??_isr,f
   604  006B  3EFF               	addlw	-1
   605  006C  1D03               	skipz
   606  006D  2869               	goto	u5_25
   607  006E  0870               	movf	??_isr,w
   608  006F  00F1               	movwf	??_isr+1
   609  0070  0EF1               	swapf	??_isr+1,f
   610  0071  1283               	bcf	3,5	;RP0=0, select bank0
   611  0072  1303               	bcf	3,6	;RP1=0, select bank0
   612  0073  081D               	movf	29,w	;volatile
   613  0074  0671               	xorwf	??_isr+1,w
   614  0075  39EF               	andlw	-17
   615  0076  0671               	xorwf	??_isr+1,w
   616  0077  009D               	movwf	29	;volatile
   617                           
   618                           ;Servos.c: 46: 
   619  0078  081F               	movf	31,w	;volatile
   620  0079  39C3               	andlw	-61
   621  007A  3830               	iorlw	48
   622  007B  009F               	movwf	31	;volatile
   623  007C                     i1l676:
   624                           
   625                           ;Servos.c: 49:     ADCON1 = 0b00000000;
   626  007C  3021               	movlw	33
   627  007D  00F0               	movwf	??_isr
   628  007E                     u8_27:
   629  007E  0BF0               	decfsz	??_isr,f
   630  007F  287E               	goto	u8_27
   631  0080                     i1l678:
   632                           
   633                           ;Servos.c: 50: 
   634  0080  1283               	bcf	3,5	;RP0=0, select bank0
   635  0081  1303               	bcf	3,6	;RP1=0, select bank0
   636  0082  130C               	bcf	12,6	;volatile
   637  0083                     i1l680:
   638                           
   639                           ;Servos.c: 51:     _delay((unsigned long)((50)*(8000000/4000000.0)));
   640  0083  149F               	bsf	31,1	;volatile
   641  0084                     i1l63:
   642  0084  0873               	movf	??_isr+3,w
   643  0085  008A               	movwf	10
   644  0086  0E72               	swapf	??_isr+2,w
   645  0087  0083               	movwf	3
   646  0088  0EFE               	swapf	btemp,f
   647  0089  0E7E               	swapf	btemp,w
   648  008A  0009               	retfie
   649  008B                     __end_of_isr:
   650  007E                     btemp	set	126	;btemp
   651  007E                     wtemp0	set	126
   652                           
   653                           	psect	intentry
   654  0004                     __pintentry:	
   655                           ;incstack = 0
   656                           ; Regs used in _isr: [wreg+status,2+status,0]
   657                           
   658  0004                     interrupt_function:
   659  007E                     saved_w	set	btemp
   660  0004  00FE               	movwf	btemp
   661  0005  0E03               	swapf	3,w
   662  0006  00F2               	movwf	??_isr+2
   663  0007  080A               	movf	10,w
   664  0008  00F3               	movwf	??_isr+3
   665  0009  120A  118A  2813   	ljmp	_isr
   666                           
   667                           	psect	config
   668                           
   669                           ;Config register CONFIG1 @ 0x2007
   670                           ;	Oscillator Selection bits
   671                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   672                           ;	Watchdog Timer Enable bit
   673                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   674                           ;	Power-up Timer Enable bit
   675                           ;	PWRTE = ON, PWRT enabled
   676                           ;	RE3/MCLR pin function select bit
   677                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   678                           ;	Code Protection bit
   679                           ;	CP = OFF, Program memory code protection is disabled
   680                           ;	Data Code Protection bit
   681                           ;	CPD = OFF, Data memory code protection is disabled
   682                           ;	Brown Out Reset Selection bits
   683                           ;	BOREN = OFF, BOR disabled
   684                           ;	Internal External Switchover bit
   685                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   686                           ;	Fail-Safe Clock Monitor Enabled bit
   687                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   688                           ;	Low Voltage Programming Enable bit
   689                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
   690                           ;	In-Circuit Debugger Mode bit
   691                           ;	DEBUG = 0x1, unprogrammed default
   692  2007                     	org	8199
   693  2007  30C4               	dw	12484
   694                           
   695                           ;Config register CONFIG2 @ 0x2008
   696                           ;	Brown-out Reset Selection bit
   697                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   698                           ;	Flash Program Memory Self Write Enable bits
   699                           ;	WRT = OFF, Write protection off
   700  2008                     	org	8200
   701  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Apr 27 11:45:20 2021

                     l70 00D0                       l71 00D9                       l72 00D9  
                     l68 00CC                       u60 00D0                       u61 00CF  
                     u77 00A9                      l700 009F                      l710 00A7  
                    l702 00A0                      l720 00B8                      l712 00AB  
                    l704 00A1                      l730 00C7                      l722 00BA  
                    l714 00AE                      l706 00A2                      l732 00C8  
                    l724 00BC                      l716 00B0                      l708 00A4  
                    l734 00C9                      l726 00BF                      l718 00B4  
                    l736 00CB                      l728 00C5                      l690 0095  
                    l682 008B                      l692 0099                      l684 008F  
                    l694 009A                      l686 0090                      l696 009B  
                    l688 0094                      l698 009C                      _PR2 0092  
                    _isr 0013                     ?_isr 0070                     i1l63 0084  
                   u1_20 0019                     u1_21 0018                     u2_20 0022  
                   u2_21 0021                     u3_25 0037                     u4_20 0054  
                   u4_21 0053                     u5_25 0069                     u8_27 007E  
                   _main 008B                     btemp 007E                     start 000C  
                  ??_isr 0070                    ?_main 0070                    _ANSEL 0188  
                  i1l670 0022                    i1l680 0083                    i1l672 004B  
                  i1l674 0054                    i1l666 0013                    i1l676 007C  
                  i1l668 0019                    i1l678 0080                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 00DD  
                 ??_main 0074                   _ADCON0 001F                   _ADCON1 009F  
                 _ADRESH 001E                   _ADRESL 009E                   _CCPR1L 0015  
                 _CCPR2L 001B                   _ANSELH 0189                   saved_w 007E  
__end_of__initialization 000F           __pcstackCOMMON 0070               __pmaintext 008B  
             __pintentry 0004                  __ptext1 0013                _T2CONbits 0012  
           __size_of_isr 0078     end_of_initialization 000F                _TRISCbits 0087  
            _CCP1CONbits 0017              _CCP2CONbits 001D      start_initialization 000F  
            __end_of_isr 008B                ___latbits 0002        interrupt_function 0004  
               _PIE1bits 008C                 _PIR1bits 000C               _ADCON0bits 001F  
          __size_of_main 0052               _INTCONbits 000B                 intlevel1 0000  
             _OSCCONbits 008F  
